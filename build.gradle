plugins {
    id 'org.springframework.boot' version '2.2.7.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '14'
targetCompatibility = '14'
archivesBaseName = 'demo'

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

test {
    useJUnitPlatform()
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
    runtimeOnly 'com.h2database:h2'
    compileOnly 'org.projectlombok:lombok'
    compile group: 'org.projectlombok', name: 'lombok', version: '1.18.12'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    // testImplementation('org.springframework.boot:spring-boot-starter-test') {
    //     exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    // }
    // testImplementation 'org.junit.jupiter:junit-jupiter:5.6.0'
    // testImplementation 'org.springframework.security:spring-security-test'
    testImplementation("org.junit.jupiter:junit-jupiter:5.6.2")

    testImplementation("org.springframework.boot:spring-boot-starter-test") {
        exclude group : "org.junit.vintage", module : "junit-vintage-engine"
        exclude group : "junit", module : "junit"
    }
    testImplementation("org.mockito:mockito-junit-jupiter")
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

bootJar {
    archiveFileName = "${archivesBaseName}.jar"
    launchScript()
}

test {
    useJUnitPlatform()
}
